libble API
Описание программного интерфейса библиотеки libble
для работы с устройствами Bluetooth Low-Energy

Заголовочный файл для работы с библиотекой:
#include "libble.h"

Публичные функции:

****************************************************************
void lble_connect(const char *addr);

Установить соединение с устройством.
addr: Bluetooth адрес в формате "AA:BB:CC:DD:EE:FF"
Устройство должно быть в состоянии Advertizing, в противном
случае функция выйдет по таймауту

****************************************************************
enum state lble_get_state(void);

enum state {
	STATE_DISCONNECTED,
	STATE_CONNECTING,
	STATE_CONNECTED
};

Узнать состояние подключения
Возвращает перечислимы тип, объявленный в libble.h

****************************************************************
void lble_disconnect(void);

Разорвать соединение с устройством.

****************************************************************
uint8_t lble_read(uint16_t handle, uint8_t *data);

Прочитание значение аттрибута по идентификатору

handle: уникальный идентификатор аттрибута в таблице атрибутов
устройства

data: адрес буфера, куда записать данные

Возвращает количество прочитанных байт либо 0 при ошибке.

****************************************************************
void lble_write(uint16_t handle, uint8_t len, uint8_t *data);

Записать значение аттрибута по идентификатору (без подверждения о записи)

handle: уникальный идентификатор аттрибута в таблице атрибутов
устройства

len: кол-во записываемых байт

data: адрес буфера, откуда брать данные

****************************************************************
void lble_listen(lble_event_handler handler);

Зарегистрировать обработчик для событий (notifications) и
начать слушать

handler: адрес обработчика событий (тип описан в libble.h)
typedef void (*lble_event_handler)(uint16_t handle, uint8_t len, const uint8_t *data);

